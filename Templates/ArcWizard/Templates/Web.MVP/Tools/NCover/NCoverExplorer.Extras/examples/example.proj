<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <UsingTask TaskName="NCoverExplorer.MSBuildTasks.NCoverExplorer" 
             AssemblyFile="NCoverExplorer.MSBuildTasks.dll"/>
  <UsingTask TaskName="NCoverExplorer.MSBuildTasks.NCover" 
             AssemblyFile="NCoverExplorer.MSBuildTasks.dll"/>
  <UsingTask TaskName="NCoverExplorer.MSBuildTasks.NUnitProject" 
             AssemblyFile="NCoverExplorer.MSBuildTasks.dll"/>

  <PropertyGroup>
    <CoveragePath>$(MSBuildProjectDirectory)</CoveragePath>
  </PropertyGroup>
  
  <!-- Here is an example of exclusions applied in a separate group for NCoverExplorer - required if you want to use RegularExpressions -->
  <PropertyGroup> 
    <CoverageExclusions> 
      <CoverageExclusion>
		<ExclusionType>Assembly</ExclusionType>
		<Pattern>MyApp.SomeNamespace.SomeClass</Pattern>
		<IsRegex>false</IsRegex>
      </CoverageExclusion>
      <CoverageExclusion>
		<ExclusionType>Namespace</ExclusionType>
		<Pattern>MyApp\.(\w*\.)?</Pattern>
		<IsRegex>true</IsRegex>
      </CoverageExclusion>
    </CoverageExclusions> 
  </PropertyGroup>
  
  <ItemGroup>
    <CoverageFile Include="$(CoveragePath)\Coverage.xml" />
  </ItemGroup>
  <ItemGroup>
    <ModuleThreshold Include="MyProject.1.dll=75" />
    <ModuleThreshold Include="MyProject.2.dll=85" />
  </ItemGroup>

  <Target Name="NCoverExplorerReport">
    <NCoverExplorer
        ProjectName="TestProject"
        ReportType="ModuleClassSummary" 
        OutputDir="$(CoveragePath)"
        XmlReportName="CoverageSummary.xml"
        HtmlReportName="CoverageSummary.html"
        ShowExcluded="True"
        SatisfactoryCoverage="80"
        CoverageFiles="@(CoverageFile)" 
        Exclusions="Assembly=*.Tests;Namespace=*.Tests*"
		/>
	</Target>

  <Target Name="NCoverExplorerSortFilter">
    <NCoverExplorer
        ProjectName="TestProject"
        ReportType="ModuleClassFunctionSummary" 
        OutputDir="$(CoveragePath)"
        XmlReportName="FunctionCoverageSummary.xml"
        HtmlReportName="FunctionCoverageSummary.html"
        ShowExcluded="True"
        SatisfactoryCoverage="80"
        Sort="FunctionCoverageAscending"
        Filter="HideFullyCovered" 
        CoverageFiles="@(CoverageFile)" 
        Exclusions="$(CoverageExclusions)"
		/>
  </Target>

  <Target Name="NCoverExplorerMinCoverage">
    <NCoverExplorer
        SatisfactoryCoverage="50"
        FailMinimum="True" 
        CoverageFiles="@(CoverageFile)" 
        Exclusions="$(CoverageExclusions)"
        ModuleThresholds="@(ModuleThreshold)"
		/>
  </Target>

  <!-- Merge coverage files without producing any reports -->
  <Target Name="NCoverExplorerMerge">
    <NCoverExplorer
        MergeFileName="CoverageMerge.xml"
        CoverageFiles="@(CoverageFile)" 
        Exclusions="Assembly=*.Tests;Namespace=*.Tests*"
		/>
  </Target>


  <!--
        The targets below are examples of the NCover task.
  -->
  
  <!-- Perform a simple NCover task. -->
  <Target Name="NCoverSimple">
    <NCover  
        CommandLineExe="nunit-console.exe" 
		CommandLineArgs="$(MSBuildProjectDirectory)\myapp.tests.dll" />
  </Target>

  <!-- Call NCover profiling a specific list of assemblies. -->
  <Target Name="NCoverAssemblyList">
    <NCover  
        CommandLineExe="nunit-console.exe" 
		CommandLineArgs="$(MSBuildProjectDirectory)\myapp.tests.dll" 
        AssemblyList="MyApp.Core;MyApp.Main"/>
  </Target>

  <!-- Perform a more complex NCover task, with assemblies picked up dynamically from an itemgroup. -->
  <ItemGroup>
     <Assembly Include="$(MSBuildProjectDirectory)\MyApp.dll" />
  </ItemGroup>
  <Target Name="NCoverCustom">
    <NCover  
        ToolPath="Tools\NCover\"
        CommandLineExe="nunit-console.exe"
        CommandLineArgs="myapp.tests.dll"
        CoverageFile="myapp.coverage.xml"
        LogLevel="Verbose"
        LogFile="myapp.coverage.log"
        WorkingDirectory="$(MSBuildProjectDirectory)"
        ExcludeAttributes="CoverageExclude"
        Assemblies="@(Assembly)" />
  </Target>


  <!--
        The targets below are examples of the NUnitProject task.
  -->

  <!-- Create a .nunit project file referencing the specified App.config and test assemblies matching this pattern. -->
  <ItemGroup>
     <Assembly Include="C:\MyApp\bin\MyApp.*.Tests.dll" />
  </ItemGroup>
  <Target Name="NUnitProject">
	  <NUnitProject Project="C:\MyApp\bin\MyApp.nunit" 
                AppConfig="C:\MyApp\bin\App.config"
                Assemblies="@(Assembly)" />
  </Target>

</Project>